#if 0
#@ Description: "echo" client & server
#@ Features:
#@  - UV_TCP_Server, UV_TCP_Client
#endif

#include "uv/tcp.ceu"

data UV_TCP_Server_Data;

code/await UV_TCP_Server_Handler (var& UV_TCP_Server_Data d, var& _uv_tcp_t tcp) -> int
do
    loop do
        vector[] byte string;
        await UV_TCP_ReadLine(&tcp, &string);
        string = string..[{'\0'}];
        _printf("[server %p] %s", &&tcp, &&string[0]);
        await UV_TCP_Write(&tcp, &string);
    end
end

#include "uv/tcp-server.ceu"

#define PORT    7000
#define BACKLOG 128

var UV_TCP_Server_Data d = _;
spawn UV_TCP_Server(&d, "0.0.0.0", PORT+0, BACKLOG);

var&? UV_TCP_Connect c = spawn UV_TCP_Connect("127.0.0.1", PORT);
watching c do
    await c!.ok;

    _printf("I will terminate after 10s...\n");

    var int i;
    loop i in [0 -> 10[ do
        await 1s;
        vector[] byte string = [] .. "Alo mundo!\n";
        await UV_TCP_Write(&c!.tcp, &string);
        await UV_TCP_ReadLine(&c!.tcp, &string);
        _printf("[client] %s", &&string[0]);
    end
end

_printf("DONE!\n");
escape 0;
